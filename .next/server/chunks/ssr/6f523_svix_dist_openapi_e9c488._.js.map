{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"rxjsStub.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/rxjsStub.ts"],"sourcesContent":["export class Observable<T> {\n  constructor(private promise: Promise<T>) {}\n\n  toPromise() {\n    return this.promise;\n  }\n\n  pipe<S>(callback: (value: T) => S | Promise<S>): Observable<S> {\n    return new Observable(this.promise.then(callback));\n  }\n}\n\nexport function from<T>(promise: Promise<any>) {\n  return new Observable(promise);\n}\n\nexport function of<T>(value: T) {\n  return new Observable<T>(Promise.resolve(value));\n}\n\nexport function mergeMap<T, S>(callback: (value: T) => Observable<S>) {\n  return (value: T) => callback(value).toPromise();\n}\n\nexport function map(callback: any) {\n  return callback;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAa,UAAU;IACrB,YAAoB,OAAmB,CAAA;QAAnB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAY;IAAG,CAAC;IAE3C,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,CAAI,QAAsC,EAAA;QAC5C,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD,CAAC;CACF;AAVD,QAAA,UAAA,GAAA,WAUC;AAED,SAAgB,IAAI,CAAI,OAAqB;IAC3C,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AACjC,CAAC;AAFD,QAAA,IAAA,GAAA,KAEC;AAED,SAAgB,EAAE,CAAI,KAAQ;IAC5B,OAAO,IAAI,UAAU,CAAI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACnD,CAAC;AAFD,QAAA,EAAA,GAAA,GAEC;AAED,SAAgB,QAAQ,CAAO,QAAqC;IAClE,OAAO,CAAC,KAAQ,EAAE,CAAG,CAAD,OAAS,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AACnD,CAAC;AAFD,QAAA,QAAA,GAAA,SAEC;AAED,SAAgB,GAAG,CAAC,QAAa;IAC/B,OAAO,QAAQ,CAAC;AAClB,CAAC;AAFD,QAAA,GAAA,GAAA,IAEC","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"file":"isomorphic-fetch.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/http/isomorphic-fetch.ts"],"sourcesContent":["import {HttpLibrary, RequestContext, ResponseContext} from './http';\nimport { from, Observable } from '../rxjsStub';\nimport \"svix-fetch\";\n\nconst numRetries = 2;\nconst sleep = (interval: number) => new Promise(resolve => setTimeout(resolve, interval));\n\nexport class IsomorphicFetchHttpLibrary implements HttpLibrary {\n    public send(request: RequestContext): Observable<ResponseContext> {\n      const resultPromise = this.sendWithRetry(request, numRetries, 50, 1);\n      return from<Promise<ResponseContext>>(resultPromise);\n    }\n\n    private async sendWithRetry(request: RequestContext, triesLeft: number, nextInterval: number, retryCount: number): Promise<ResponseContext> {\n      try {\n        const response = await this.sendOnce(request);\n        if (triesLeft <= 0 || response.httpStatusCode < 500) {\n          return response;\n        }\n      } catch (e) {\n        if (triesLeft <= 0) {\n          throw e;\n        }\n      };\n      await sleep(nextInterval);\n      const headers = request.getHeaders();\n      headers['svix-retry-count'] = retryCount.toString()\n      return await this.sendWithRetry(request, --triesLeft, nextInterval * 2, ++retryCount);\n    }\n\n    private sendOnce(request: RequestContext): Promise<ResponseContext> {\n        let method = request.getHttpMethod().toString();\n        let body = request.getBody();\n\n        // Cloudflare Workers fail if the credentials option is used in a fetch call.\n        // This work around that. Source:\n        // https://github.com/cloudflare/workers-sdk/issues/2514#issuecomment-2178070014\n        const isCredentialsSupported = \"credentials\" in Request.prototype;\n\n        return fetch(request.getUrl(), {\n            method: method,\n            body: body as any,\n            headers: request.getHeaders(),\n            credentials: isCredentialsSupported ? \"same-origin\" : undefined\n        }).then((resp: any) => {\n            const headers: { [name: string]: string } = {};\n            resp.headers.forEach((value: string, name: string) => {\n              headers[name] = value;\n            });\n\n            const body = {\n              text: () => resp.text(),\n              binary: () => resp.blob()\n            };\n            return new ResponseContext(resp.status, headers, body);\n        });\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,2BAAoE;AACpE,MAAA,oCAA+C;;AAG/C,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,MAAM,KAAK,GAAG,CAAC,QAAgB,EAAE,CAAG,CAAD,GAAK,OAAO,EAAC,OAAO,CAAC,EAAE,AAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE1F,MAAa,0BAA0B;IAC5B,IAAI,CAAC,OAAuB,EAAA;QACjC,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACrE,OAAO,CAAA,GAAA,WAAA,IAAI,EAA2B,aAAa,CAAC,CAAC;IACvD,CAAC;IAEa,aAAa,CAAC,OAAuB,EAAE,SAAiB,EAAE,YAAoB,EAAE,UAAkB,EAAA;;YAC9G,IAAI;gBACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC9C,IAAI,SAAS,IAAI,CAAC,IAAI,QAAQ,CAAC,cAAc,GAAG,GAAG,EAAE;oBACnD,OAAO,QAAQ,CAAC;iBACjB;aACF,CAAC,OAAO,CAAC,EAAE;gBACV,IAAI,SAAS,IAAI,CAAC,EAAE;oBAClB,MAAM,CAAC,CAAC;iBACT;aACF;;YACD,MAAM,KAAK,CAAC,YAAY,CAAC,CAAC;YAC1B,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;YACrC,OAAO,CAAC,kBAAkB,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAA;YACnD,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,YAAY,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QACxF,CAAC;KAAA;IAEO,QAAQ,CAAC,OAAuB,EAAA;QACpC,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC;QAChD,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAK7B,MAAM,sBAAsB,GAAG,aAAa,IAAI,OAAO,CAAC,SAAS,CAAC;QAElE,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAC3B,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAW;YACjB,OAAO,EAAE,OAAO,CAAC,UAAU,EAAE;YAC7B,WAAW,EAAE,sBAAsB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS;SAClE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,MAAM,OAAO,GAA+B,CAAA,CAAE,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,IAAY,EAAE,EAAE;gBACnD,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG;gBACX,IAAI,EAAE,GAAG,CAAG,CAAD,GAAK,CAAC,IAAI,EAAE;gBACvB,MAAM,EAAE,GAAG,CAAG,CAAD,GAAK,CAAC,IAAI,EAAE;aAC1B,CAAC;YACF,OAAO,IAAI,OAAA,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAlDD,QAAA,0BAAA,GAAA,2BAkDC","ignoreList":[0]}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"file":"http.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/http/http.ts"],"sourcesContent":["import { Observable, from } from '../rxjsStub';\n\nexport * from './isomorphic-fetch';\n\n/**\n * Represents an HTTP method.\n */\nexport enum HttpMethod {\n    GET = \"GET\",\n    HEAD = \"HEAD\",\n    POST = \"POST\",\n    PUT = \"PUT\",\n    DELETE = \"DELETE\",\n    CONNECT = \"CONNECT\",\n    OPTIONS = \"OPTIONS\",\n    TRACE = \"TRACE\",\n    PATCH = \"PATCH\"\n}\n\n/**\n * Represents an HTTP file which will be transferred from or to a server.\n */\nexport type HttpFile = Blob & { readonly name: string };\n\nexport class HttpException extends Error {\n    public constructor(msg: string) {\n        super(msg);\n    }\n}\n\n/**\n * Represents the body of an outgoing HTTP request.\n */\nexport type RequestBody = undefined | string | FormData | URLSearchParams;\n\ntype Headers = Record<string, string>;\n\nfunction ensureAbsoluteUrl(url: string) {\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n        return url;\n    }\n    throw new Error(\"You need to define an absolute base url for the server.\");\n}\n\n/**\n * Represents an HTTP request context\n */\nexport class RequestContext {\n    private headers: Headers = {};\n    private body: RequestBody = undefined;\n    private url: URL;\n\n    /**\n     * Creates the request context using a http method and request resource url\n     *\n     * @param url url of the requested resource\n     * @param httpMethod http method\n     */\n    public constructor(url: string, private httpMethod: HttpMethod) {\n        this.url = new URL(ensureAbsoluteUrl(url));\n    }\n\n    /*\n     * Returns the url set in the constructor including the query string\n     *\n     */\n    public getUrl(): string {\n        return this.url.toString().endsWith(\"/\") ?\n            this.url.toString().slice(0, -1)\n            : this.url.toString();\n    }\n\n    /**\n     * Replaces the url set in the constructor with this url.\n     *\n     */\n    public setUrl(url: string) {\n        this.url = new URL(ensureAbsoluteUrl(url));\n    }\n\n    /**\n     * Sets the body of the http request either as a string or FormData\n     *\n     * Note that setting a body on a HTTP GET, HEAD, DELETE, CONNECT or TRACE\n     * request is discouraged.\n     * https://httpwg.org/http-core/draft-ietf-httpbis-semantics-latest.html#rfc.section.7.3.1\n     *\n     * @param body the body of the request\n     */\n    public setBody(body: RequestBody) {\n        this.body = body;\n    }\n\n    public getHttpMethod(): HttpMethod {\n        return this.httpMethod;\n    }\n\n    public getHeaders(): Headers {\n        return this.headers;\n    }\n\n    public getBody(): RequestBody {\n        return this.body;\n    }\n\n    public setQueryParam(name: string, value: string) {\n        this.url.searchParams.set(name, value);\n    }\n\n    public appendQueryParam(name: string, value: string) {\n        this.url.searchParams.append(name, value);\n    }\n\n    /**\n     * Sets a cookie with the name and value. NO check  for duplicate cookies is performed\n     *\n     */\n    public addCookie(name: string, value: string): void {\n        if (!this.headers[\"Cookie\"]) {\n            this.headers[\"Cookie\"] = \"\";\n        }\n        this.headers[\"Cookie\"] += name + \"=\" + value + \"; \";\n    }\n\n    public setHeaderParam(key: string, value: string): void  {\n        this.headers[key] = value;\n    }\n}\n\nexport interface ResponseBody {\n    text(): Promise<string>;\n    binary(): Promise<Blob>;\n}\n\n/**\n * Helper class to generate a `ResponseBody` from binary data\n */\nexport class SelfDecodingBody implements ResponseBody {\n    constructor(private dataSource: Promise<Blob>) {}\n\n    binary(): Promise<Blob> {\n        return this.dataSource;\n    }\n\n    async text(): Promise<string> {\n        const data: Blob = await this.dataSource;\n        // @ts-ignore\n        if (data.text) {\n            // @ts-ignore\n            return data.text();\n        }\n\n        return new Promise<string>((resolve, reject) => {\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => resolve(reader.result as string));\n            reader.addEventListener(\"error\", () => reject(reader.error));\n            reader.readAsText(data);\n        });\n    }\n}\n\nexport class ResponseContext {\n    public constructor(\n        public httpStatusCode: number,\n        public headers: Headers,\n        public body: ResponseBody\n    ) {}\n\n    /**\n     * Parse header value in the form `value; param1=\"value1\"`\n     *\n     * E.g. for Content-Type or Content-Disposition\n     * Parameter names are converted to lower case\n     * The first parameter is returned with the key `\"\"`\n     */\n    public getParsedHeader(headerName: string): Headers {\n        const result: Headers = {};\n        if (!this.headers[headerName]) {\n            return result;\n        }\n\n        const parameters = this.headers[headerName].split(\";\");\n        for (const parameter of parameters) {\n            let [key, value] = parameter.split(\"=\", 2);\n            key = key.toLowerCase().trim();\n            if (value === undefined) {\n                result[\"\"] = key;\n            } else {\n                value = value.trim();\n                if (value.startsWith('\"') && value.endsWith('\"')) {\n                    value = value.substring(1, value.length - 1);\n                }\n                result[key] = value;\n            }\n        }\n        return result;\n    }\n\n    public async getBodyAsFile(): Promise<HttpFile> {\n        const data = await this.body.binary();\n        const fileName = this.getParsedHeader(\"content-disposition\")[\"filename\"] || \"\";\n        const contentType = this.headers[\"content-type\"] || \"\";\n        try {\n            return new File([data], fileName, { type: contentType });\n        } catch (error) {\n            /** Fallback for when the File constructor is not available */\n            return Object.assign(data, {\n                name: fileName,\n                type: contentType\n            });\n        }\n    }\n\n    /**\n     * Use a heuristic to get a body of unknown data structure.\n     * Return as string if possible, otherwise as binary.\n     */\n    public getBodyAsAny(): Promise<string | Blob | undefined> {\n        try {\n            return this.body.text();\n        } catch {}\n\n        try {\n            return this.body.binary();\n        } catch {}\n\n        return Promise.resolve(undefined);\n    }\n}\n\nexport interface HttpLibrary {\n    send(request: RequestContext): Observable<ResponseContext>;\n}\n\nexport interface PromiseHttpLibrary {\n    send(request: RequestContext): Promise<ResponseContext>;\n}\n\nexport function wrapHttpLibrary(promiseHttpLibrary: PromiseHttpLibrary): HttpLibrary {\n  return {\n    send(request: RequestContext): Observable<ResponseContext> {\n      return from(promiseHttpLibrary.send(request));\n    }\n  }\n}\n\nexport class HttpInfo<T> extends ResponseContext {\n    public constructor(\n        public httpStatusCode: number,\n        public headers: Headers,\n        public body: ResponseBody,\n        public data: T,\n    ) {\n        super(httpStatusCode, headers, body);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"file":"auth.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/auth/auth.ts"],"sourcesContent":["import { RequestContext } from \"../http/http\";\n\n/**\n * Interface authentication schemes.\n */\nexport interface SecurityAuthentication {\n    /*\n     * @return returns the name of the security authentication as specified in OAI\n     */\n    getName(): string;\n\n    /**\n     * Applies the authentication scheme to the request context\n     *\n     * @params context the request context which should use this authentication scheme\n     */\n    applySecurityAuthentication(context: RequestContext): void | Promise<void>;\n}\n\nexport interface TokenProvider {\n  getToken(): Promise<string> | string;\n}\n\n/**\n * Applies http authentication to the request context.\n */\nexport class HTTPBearerAuthentication implements SecurityAuthentication {\n    /**\n     * Configures the http authentication with the required details.\n     *\n     * @param tokenProvider service that can provide the up-to-date token when needed\n     */\n    public constructor(private tokenProvider: TokenProvider) {}\n\n    public getName(): string {\n        return \"HTTPBearer\";\n    }\n\n    public async applySecurityAuthentication(context: RequestContext) {\n        context.setHeaderParam(\"Authorization\", \"Bearer \" + await this.tokenProvider.getToken());\n    }\n}\n\n\nexport type AuthMethods = {\n    \"default\"?: SecurityAuthentication,\n    \"HTTPBearer\"?: SecurityAuthentication\n}\n\nexport type ApiKeyConfiguration = string;\nexport type HttpBasicConfiguration = { \"username\": string, \"password\": string };\nexport type HttpBearerConfiguration = { tokenProvider: TokenProvider };\nexport type OAuth2Configuration = { accessToken: string };\n\nexport type AuthMethodsConfiguration = {\n    \"default\"?: SecurityAuthentication,\n    \"HTTPBearer\"?: HttpBearerConfiguration\n}\n\n/**\n * Creates the authentication methods from a swagger description.\n *\n */\nexport function configureAuthMethods(config: AuthMethodsConfiguration | undefined): AuthMethods {\n    let authMethods: AuthMethods = {}\n\n    if (!config) {\n        return authMethods;\n    }\n    authMethods[\"default\"] = config[\"default\"]\n\n    if (config[\"HTTPBearer\"]) {\n        authMethods[\"HTTPBearer\"] = new HTTPBearerAuthentication(\n            config[\"HTTPBearer\"][\"tokenProvider\"]\n        );\n    }\n\n    return authMethods;\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAa,wBAAwB;IAMjC,YAA2B,aAA4B,CAAA;QAA5B,IAAA,CAAA,aAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpD,OAAO,GAAA;QACV,OAAO,YAAY,CAAC;IACxB,CAAC;IAEY,2BAA2B,CAAC,OAAuB,EAAA;;YAC5D,OAAO,CAAC,cAAc,CAAC,eAAe,EAAE,SAAS,GAAA,CAAG,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAA,CAAC,CAAC;QAC7F,CAAC;KAAA;CACJ;AAfD,QAAA,wBAAA,GAAA,yBAeC;AAsBD,SAAgB,oBAAoB,CAAC,MAA4C;IAC7E,IAAI,WAAW,GAAgB,CAAA,CAAE,CAAA;IAEjC,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,WAAW,CAAC;KACtB;IACD,WAAW,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;IAE1C,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;QACtB,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,wBAAwB,CACpD,MAAM,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,CACxC,CAAC;KACL;IAED,OAAO,WAAW,CAAC;AACvB,CAAC;AAfD,QAAA,oBAAA,GAAA,qBAeC","ignoreList":[0]}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"file":"middleware.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/middleware.ts"],"sourcesContent":["import {RequestContext, ResponseContext} from './http/http';\nimport { Observable, from } from './rxjsStub';\n\n/**\n * Defines the contract for a middleware intercepting requests before\n * they are sent (but after the RequestContext was created)\n * and before the ResponseContext is unwrapped.\n *\n */\nexport interface Middleware {\n    /**\n     * Modifies the request before the request is sent.\n     *\n     * @param context RequestContext of a request which is about to be sent to the server\n     * @returns an observable of the updated request context\n     *\n     */\n    pre(context: RequestContext): Observable<RequestContext>;\n    /**\n     * Modifies the returned response before it is deserialized.\n     *\n     * @param context ResponseContext of a sent request\n     * @returns an observable of the modified response context\n     */\n    post(context: ResponseContext): Observable<ResponseContext>;\n}\n\nexport class PromiseMiddlewareWrapper implements Middleware {\n\n    public constructor(private middleware: PromiseMiddleware) {\n\n    }\n\n    pre(context: RequestContext): Observable<RequestContext> {\n        return from(this.middleware.pre(context));\n    }\n\n    post(context: ResponseContext): Observable<ResponseContext> {\n        return from(this.middleware.post(context));\n    }\n\n}\n\n/**\n * Defines the contract for a middleware intercepting requests before\n * they are sent (but after the RequestContext was created)\n * and before the ResponseContext is unwrapped.\n *\n */\nexport interface PromiseMiddleware {\n    /**\n     * Modifies the request before the request is sent.\n     *\n     * @param context RequestContext of a request which is about to be sent to the server\n     * @returns an observable of the updated request context\n     *\n     */\n    pre(context: RequestContext): Promise<RequestContext>;\n        /**\n     * Modifies the returned response before it is deserialized.\n     *\n     * @param context ResponseContext of a sent request\n     * @returns an observable of the modified response context\n     */\n    post(context: ResponseContext): Promise<ResponseContext>;\n}\n"],"names":[],"mappings":";;;;;AACA,MAAA,mCAA8C;AA0B9C,MAAa,wBAAwB;IAEjC,YAA2B,UAA6B,CAAA;QAA7B,IAAA,CAAA,UAAU,GAAV,UAAU,CAAmB;IAExD,CAAC;IAED,GAAG,CAAC,OAAuB,EAAA;QACvB,OAAO,CAAA,GAAA,WAAA,IAAI,EAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,CAAC,OAAwB,EAAA;QACzB,OAAO,CAAA,GAAA,WAAA,IAAI,EAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/C,CAAC;CAEJ;AAdD,QAAA,wBAAA,GAAA,yBAcC","ignoreList":[0]}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"file":"servers.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/servers.ts"],"sourcesContent":["import { RequestContext, HttpMethod } from \"./http/http\";\n\nexport interface BaseServerConfiguration {\n    makeRequestContext(endpoint: string, httpMethod: HttpMethod): RequestContext;\n}\n\n/**\n *\n * Represents the configuration of a server including its\n * url template and variable configuration based on the url.\n *\n */\nexport class ServerConfiguration<T extends { [key: string]: string }> implements BaseServerConfiguration {\n    public constructor(private url: string, private variableConfiguration: T) {}\n\n    /**\n     * Sets the value of the variables of this server. Variables are included in \n     * the `url` of this ServerConfiguration in the form `{variableName}`\n     *\n     * @param variableConfiguration a partial variable configuration for the \n     * variables contained in the url\n     */\n    public setVariables(variableConfiguration: Partial<T>) {\n        Object.assign(this.variableConfiguration, variableConfiguration);\n    }\n\n    public getConfiguration(): T {\n        return this.variableConfiguration\n    }\n\n    private getUrl() {\n        let replacedUrl = this.url;\n        for (const key in this.variableConfiguration) {\n            var re = new RegExp(\"{\" + key + \"}\",\"g\");\n            replacedUrl = replacedUrl.replace(re, this.variableConfiguration[key]);\n        }\n        return replacedUrl\n    }\n\n    /**\n     * Creates a new request context for this server using the url with variables\n     * replaced with their respective values and the endpoint of the request appended.\n     *\n     * @param endpoint the endpoint to be queried on the server\n     * @param httpMethod httpMethod to be used\n     *\n     */\n    public makeRequestContext(endpoint: string, httpMethod: HttpMethod): RequestContext {\n        return new RequestContext(this.getUrl() + endpoint, httpMethod);\n    }\n}\n\nexport const server1 = new ServerConfiguration<{  }>(\"https://api.eu.svix.com\", {  })\nexport const server2 = new ServerConfiguration<{  }>(\"https://api.us.svix.com\", {  })\n\nexport const servers = [server1, server2];\n"],"names":[],"mappings":";;;;;AAAA,MAAA,gCAAyD;AAYzD,MAAa,mBAAmB;IAC5B,YAA2B,GAAW,EAAU,qBAAwB,CAAA;QAA7C,IAAA,CAAA,GAAG,GAAH,GAAG,CAAQ;QAAU,IAAA,CAAA,qBAAqB,GAArB,qBAAqB,CAAG;IAAG,CAAC;IASrE,YAAY,CAAC,qBAAiC,EAAA;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,qBAAqB,CAAC,CAAC;IACrE,CAAC;IAEM,gBAAgB,GAAA;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAA;IACrC,CAAC;IAEO,MAAM,GAAA;QACV,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAK,MAAM,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAE;YAC1C,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,GAAG,CAAC,CAAC;YACzC,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1E;QACD,OAAO,WAAW,CAAA;IACtB,CAAC;IAUM,kBAAkB,CAAC,QAAgB,EAAE,UAAsB,EAAA;QAC9D,OAAO,IAAI,OAAA,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,EAAE,UAAU,CAAC,CAAC;IACpE,CAAC;CACJ;AAtCD,QAAA,mBAAA,GAAA,oBAsCC;AAEY,QAAA,OAAO,GAAG,IAAI,mBAAmB,CAAO,yBAAyB,EAAE,CAAA,CAAI,CAAC,CAAA;AACxE,QAAA,OAAO,GAAG,IAAI,mBAAmB,CAAO,yBAAyB,EAAE,CAAA,CAAI,CAAC,CAAA;AAExE,QAAA,OAAO,GAAG;IAAC,QAAA,OAAO;IAAE,QAAA,OAAO;CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"file":"configuration.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/configuration.ts"],"sourcesContent":["import { HttpLibrary } from \"./http/http\";\nimport { Middleware, PromiseMiddleware, PromiseMiddlewareWrapper } from \"./middleware\";\nimport { IsomorphicFetchHttpLibrary as DefaultHttpLibrary } from \"./http/isomorphic-fetch\";\nimport { BaseServerConfiguration, server1 } from \"./servers\";\nimport { configureAuthMethods, AuthMethods, AuthMethodsConfiguration } from \"./auth/auth\";\n\nexport interface Configuration {\n    readonly baseServer: BaseServerConfiguration;\n    readonly httpApi: HttpLibrary;\n    readonly middleware: Middleware[];\n    readonly authMethods: AuthMethods;\n}\n\n\n/**\n * Interface with which a configuration object can be configured.\n */\nexport interface ConfigurationParameters {\n    /**\n     * Default server to use - a list of available servers (according to the \n     * OpenAPI yaml definition) is included in the `servers` const in `./servers`. You can also\n     * create your own server with the `ServerConfiguration` class from the same \n     * file.\n     */\n    baseServer?: BaseServerConfiguration;\n    /**\n     * HTTP library to use e.g. IsomorphicFetch. This can usually be skipped as \n     * all generators come with a default library.\n     * If available, additional libraries can be imported from `./http/*`\n     */\n    httpApi?: HttpLibrary;\n\n    /**\n     * The middlewares which will be applied to requests and responses. You can \n     * add any number of middleware components to modify requests before they \n     * are sent or before they are deserialized by implementing the `Middleware`\n     * interface defined in `./middleware`\n     */\n    middleware?: Middleware[];\n    /**\n     * Configures middleware functions that return promises instead of \n     * Observables (which are used by `middleware`). Otherwise allows for the \n     * same functionality as `middleware`, i.e., modifying requests before they \n     * are sent and before they are deserialized.\n     */\n    promiseMiddleware?: PromiseMiddleware[];\n    /**\n     * Configuration for the available authentication methods (e.g., api keys) \n     * according to the OpenAPI yaml definition. For the definition, please refer to \n     * `./auth/auth`\n     */\n    authMethods?: AuthMethodsConfiguration\n}\n\n/**\n * Provide your `ConfigurationParameters` to this function to get a `Configuration`\n * object that can be used to configure your APIs (in the constructor or \n * for each request individually).\n *\n * If a property is not included in conf, a default is used:\n *    - baseServer: server1\n *    - httpApi: IsomorphicFetchHttpLibrary\n *    - middleware: []\n *    - promiseMiddleware: []\n *    - authMethods: {}\n *\n * @param conf partial configuration\n */\nexport function createConfiguration(conf: ConfigurationParameters = {}): Configuration {\n    const configuration: Configuration = {\n        baseServer: conf.baseServer !== undefined ? conf.baseServer : server1,\n        httpApi: conf.httpApi || new DefaultHttpLibrary(),\n        middleware: conf.middleware || [],\n        authMethods: configureAuthMethods(conf.authMethods)\n    };\n    if (conf.promiseMiddleware) {\n        conf.promiseMiddleware.forEach(\n            m => configuration.middleware.push(new PromiseMiddlewareWrapper(m))\n        );\n    }\n    return configuration;\n}"],"names":[],"mappings":";;;;;AACA,MAAA,uCAAuF;AACvF,MAAA,wDAA2F;AAC3F,MAAA,iCAA6D;AAC7D,MAAA,gCAA0F;AAgE1F,SAAgB,mBAAmB,CAAC,OAAgC,CAAA,CAAE;IAClE,MAAM,aAAa,GAAkB;QACjC,UAAU,EAAE,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAA,OAAO;QACrE,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,mBAAA,0BAAkB,EAAE;QACjD,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,EAAE;QACjC,WAAW,EAAE,CAAA,GAAA,OAAA,oBAAoB,EAAC,IAAI,CAAC,WAAW,CAAC;KACtD,CAAC;IACF,IAAI,IAAI,CAAC,iBAAiB,EAAE;QACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAC1B,CAAC,CAAC,EAAE,AAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,aAAA,wBAAwB,CAAC,CAAC,CAAC,CAAC,CACtE,CAAC;KACL;IACD,OAAO,aAAa,CAAC;AACzB,CAAC;AAbD,QAAA,mBAAA,GAAA,oBAaC","ignoreList":[0]}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"file":"util.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/util.ts"],"sourcesContent":["/**\n * Returns if a specific http code is in a given code range\n * where the code range is defined as a combination of digits\n * and \"X\" (the letter X) with a length of 3\n *\n * @param codeRange string with length 3 consisting of digits and \"X\" (the letter X)\n * @param code the http status code to be checked against the code range\n */\nexport function isCodeInRange(codeRange: string, code: number): boolean {\n    // This is how the default value is encoded in OAG\n    if (codeRange === \"0\") {\n        return true;\n    }\n    if (codeRange == code.toString()) {\n        return true;\n    } else {\n        const codeString = code.toString();\n        if (codeString.length != codeRange.length) {\n            return false;\n        }\n        for (let i = 0; i < codeString.length; i++) {\n            if (codeRange.charAt(i) != \"X\" && codeRange.charAt(i) != codeString.charAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n/**\n* Returns if it can consume form\n*\n* @param consumes array\n*/\nexport function canConsumeForm(contentTypes: string[]): boolean {\n    return contentTypes.indexOf('multipart/form-data') !== -1\n}\n"],"names":[],"mappings":";;;;;AAQA,SAAgB,aAAa,CAAC,SAAiB,EAAE,IAAY;IAEzD,IAAI,SAAS,KAAK,GAAG,EAAE;QACnB,OAAO,IAAI,CAAC;KACf;IACD,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;QAC9B,OAAO,IAAI,CAAC;KACf,MAAM;QACH,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE;YACvC,OAAO,KAAK,CAAC;SAChB;QACD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACxC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;gBAC3E,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;AACL,CAAC;AAnBD,QAAA,aAAA,GAAA,cAmBC;AAOD,SAAgB,cAAc,CAAC,YAAsB;IACjD,OAAO,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAA;AAC7D,CAAC;AAFD,QAAA,cAAA,GAAA,eAEC","ignoreList":[0]}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///workspaces/bark-ai-chatbot/node_modules/.pnpm/svix%401.45.1_encoding%400.1.13/node_modules/svix/src/openapi/index.ts"],"sourcesContent":["export * from \"./http/http\";\nexport * from \"./auth/auth\";\nexport * from \"./models/all\";\nexport { createConfiguration } from \"./configuration\"\nexport type { Configuration } from \"./configuration\"\nexport * from \"./apis/exception\";\nexport * from \"./servers\";\nexport { RequiredError } from \"./apis/baseapi\";\n\nexport type { PromiseMiddleware as Middleware } from './middleware';\nexport { type ApplicationApiGetAppUsageStatsApiV1AppStatsUsageGetRequest, type ApplicationApiV1ApplicationCreateRequest, type ApplicationApiV1ApplicationDeleteRequest, type ApplicationApiV1ApplicationGetRequest, type ApplicationApiV1ApplicationGetStatsRequest, type ApplicationApiV1ApplicationListRequest, type ApplicationApiV1ApplicationPatchRequest, type ApplicationApiV1ApplicationUpdateRequest, ObjectApplicationApi as ApplicationApi,  type AuthenticationApiV1AuthenticationAppPortalAccessRequest, type AuthenticationApiV1AuthenticationCreateMessageTokenRequest, type AuthenticationApiV1AuthenticationDashboardAccessRequest, type AuthenticationApiV1AuthenticationExchangeOneTimeTokenRequest, type AuthenticationApiV1AuthenticationExpireAllRequest, type AuthenticationApiV1AuthenticationGetPollerTokenRequest, type AuthenticationApiV1AuthenticationLogoutRequest, type AuthenticationApiV1AuthenticationRotatePollerTokenRequest, ObjectAuthenticationApi as AuthenticationApi,  type BackgroundTasksApiGetBackgroundTaskRequest, type BackgroundTasksApiListBackgroundTasksRequest, ObjectBackgroundTasksApi as BackgroundTasksApi,  type BroadcastApiCreateBroadcastMessageRequest, ObjectBroadcastApi as BroadcastApi,  type EndpointApiV1EndpointCreateRequest, type EndpointApiV1EndpointDeleteRequest, type EndpointApiV1EndpointDeleteMtlsConfigRequest, type EndpointApiV1EndpointDeleteOauthConfigRequest, type EndpointApiV1EndpointGetRequest, type EndpointApiV1EndpointGetHeadersRequest, type EndpointApiV1EndpointGetSecretRequest, type EndpointApiV1EndpointGetStatsRequest, type EndpointApiV1EndpointListRequest, type EndpointApiV1EndpointPatchRequest, type EndpointApiV1EndpointPatchHeadersRequest, type EndpointApiV1EndpointRecoverRequest, type EndpointApiV1EndpointReplayMissingRequest, type EndpointApiV1EndpointRotateSecretRequest, type EndpointApiV1EndpointSendExampleRequest, type EndpointApiV1EndpointTransformationGetRequest, type EndpointApiV1EndpointTransformationPartialUpdateRequest, type EndpointApiV1EndpointTransformationSimulateRequest, type EndpointApiV1EndpointUpdateRequest, type EndpointApiV1EndpointUpdateHeadersRequest, type EndpointApiV1EndpointUpdateMtlsConfigRequest, type EndpointApiV1EndpointUpdateOauthConfigRequest, type EndpointApiV1SinkCreateRequest, type EndpointApiV1SinkGetRequest, type EndpointApiV1SinkListRequest, ObjectEndpointApi as EndpointApi,  type EnvironmentApiV1EnvironmentExportRequest, type EnvironmentApiV1EnvironmentImportRequest, ObjectEnvironmentApi as EnvironmentApi,  type EnvironmentSettingsApiV1EnvironmentGetSettingsRequest, ObjectEnvironmentSettingsApi as EnvironmentSettingsApi,  type EventTypeApiV1EventTypeCreateRequest, type EventTypeApiV1EventTypeDeleteRequest, type EventTypeApiV1EventTypeExportOpenapiRequest, type EventTypeApiV1EventTypeGenerateExampleRequest, type EventTypeApiV1EventTypeGetRequest, type EventTypeApiV1EventTypeGetRetryScheduleRequest, type EventTypeApiV1EventTypeImportOpenapiRequest, type EventTypeApiV1EventTypeListRequest, type EventTypeApiV1EventTypePatchRequest, type EventTypeApiV1EventTypeUpdateRequest, type EventTypeApiV1EventTypeUpdateRetryScheduleRequest, ObjectEventTypeApi as EventTypeApi,  type EventsApiV1EventsRequest, ObjectEventsApi as EventsApi,  type HealthApiV1HealthGetRequest, ObjectHealthApi as HealthApi,  type InboundApiV1InboundMsgRequest, type InboundApiV1InboundRotateUrlRequest, ObjectInboundApi as InboundApi,  type IntegrationApiV1IntegrationCreateRequest, type IntegrationApiV1IntegrationDeleteRequest, type IntegrationApiV1IntegrationGetRequest, type IntegrationApiV1IntegrationGetKeyRequest, type IntegrationApiV1IntegrationListRequest, type IntegrationApiV1IntegrationRotateKeyRequest, type IntegrationApiV1IntegrationUpdateRequest, ObjectIntegrationApi as IntegrationApi,  type MessageApiCreateMessageAttemptForEndpointRequest, type MessageApiV1EventsPublicRequest, type MessageApiV1MessageCreateRequest, type MessageApiV1MessageEventsRequest, type MessageApiV1MessageEventsSubscriptionRequest, type MessageApiV1MessageEventsSubscriptionCreateTokenRequest, type MessageApiV1MessageExpungeContentRequest, type MessageApiV1MessageGetRequest, type MessageApiV1MessageGetRawPayloadRequest, type MessageApiV1MessageListRequest, ObjectMessageApi as MessageApi,  type MessageAttemptApiV1MessageAttemptCountByEndpointRequest, type MessageAttemptApiV1MessageAttemptExpungeContentRequest, type MessageAttemptApiV1MessageAttemptGetRequest, type MessageAttemptApiV1MessageAttemptGetHeadersRequest, type MessageAttemptApiV1MessageAttemptListAttemptedDestinationsRequest, type MessageAttemptApiV1MessageAttemptListAttemptedMessagesRequest, type MessageAttemptApiV1MessageAttemptListByEndpointRequest, type MessageAttemptApiV1MessageAttemptListByEndpointDeprecatedRequest, type MessageAttemptApiV1MessageAttemptListByMsgRequest, type MessageAttemptApiV1MessageAttemptListByMsgDeprecatedRequest, type MessageAttemptApiV1MessageAttemptResendRequest, ObjectMessageAttemptApi as MessageAttemptApi,  type StatisticsApiV1StatisticsAggregateAppStatsRequest, type StatisticsApiV1StatisticsAggregateEventTypesRequest, type StatisticsApiV1StatsAppAttemptsRequest, type StatisticsApiV1StatsEndpointAttemptsRequest, ObjectStatisticsApi as StatisticsApi,  type StreamApiV1StreamCreateRequest, type StreamApiV1StreamCreateEventsRequest, type StreamApiV1StreamDeleteRequest, type StreamApiV1StreamEventsGetRequest, type StreamApiV1StreamGetRequest, type StreamApiV1StreamListRequest, type StreamApiV1StreamPatchRequest, type StreamApiV1StreamUpdateRequest, ObjectStreamApi as StreamApi,  type StreamEventTypesApiV1StreamEventTypeCreateRequest, type StreamEventTypesApiV1StreamEventTypeDeleteRequest, type StreamEventTypesApiV1StreamEventTypeGetRequest, type StreamEventTypesApiV1StreamEventTypeListRequest, type StreamEventTypesApiV1StreamEventTypePatchRequest, type StreamEventTypesApiV1StreamEventTypeUpdateRequest, ObjectStreamEventTypesApi as StreamEventTypesApi,  type TransformationTemplateApiV1EndpointUpdateHubspotOauthConfigRequest, type TransformationTemplateApiV1TransformationTemplateCreateRequest, type TransformationTemplateApiV1TransformationTemplateDeleteRequest, type TransformationTemplateApiV1TransformationTemplateGenerateRequest, type TransformationTemplateApiV1TransformationTemplateGetRequest, type TransformationTemplateApiV1TransformationTemplateListRequest, type TransformationTemplateApiV1TransformationTemplateOauthDiscordRequest, type TransformationTemplateApiV1TransformationTemplateOauthHubspotRequest, type TransformationTemplateApiV1TransformationTemplateOauthSlackRequest, type TransformationTemplateApiV1TransformationTemplatePatchRequest, type TransformationTemplateApiV1TransformationTemplateSimulateRequest, type TransformationTemplateApiV1TransformationTemplateUpdateRequest, ObjectTransformationTemplateApi as TransformationTemplateApi,  type WebhookEndpointApiCreateOperationalWebhookEndpointRequest, type WebhookEndpointApiDeleteOperationalWebhookEndpointRequest, type WebhookEndpointApiGetOperationalWebhookEndpointRequest, type WebhookEndpointApiGetOperationalWebhookEndpointSecretRequest, type WebhookEndpointApiListOperationalWebhookEndpointsRequest, type WebhookEndpointApiRotateOperationalWebhookEndpointSecretRequest, type WebhookEndpointApiUpdateOperationalWebhookEndpointRequest, ObjectWebhookEndpointApi as WebhookEndpointApi } from './types/ObjectParamAPI';\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}